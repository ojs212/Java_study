package chap3;
/*
 * 이항연산자 : 비트연산자 &(AND), |(OR), ~(NOT), ^(XOR)
 */
public class OpEx5 {

	public static void main(String[] args) {
		System.out.println(6 & 3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * --------------
		 * & : 00000010 : 2
		 */
		System.out.println(6 | 3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * --------------
		 * | : 00000111 : 7
		 */
		System.out.println(6 ^ 3);
		/* ^ : 베타적 or. 서로 다른 비트인 경우 1
		 * 6 : 00000110
		 * 3 : 00000011
		 * --------------
		 * ^ : 00000101 : 5
		 */
		System.out.println(~10);
		/* 
		 * 10 : 00001010
		 * ---------------
		 *  ~ : 11110101
		 *  
		 *  음수를 2의 보수로 표현함 <<
		 *  2의 보수 : 1의 보수 + 1
		 *  왼쪽비트 한개가 부호비트 : 0(양수), 1(음수)
		 *  1110101 : ? 수의 2의 보수
		 *  ? : 1110101의 2의 보수
		 *  1110101 : 1의 보수 -> 0001010
		 *  		  2의 보수 -> 0001010 + 1 -> 0001011 = 11
		 *  
		 */
	}
}
