

***************FileInputStreamEx1.java***************

package chap14;

import java.io.FileInputStream;
import java.io.IOException;

/*
 * FileInputStream 예제
 *  : 파일의 내용을 읽어서 콘솔에 출력하기
 *  
 *  주요메서드
 *   - int read() : 1byte씩 읽어서 리턴
 *   - int read(byte[] buf) : buf의 크기만큼 읽어서 buf에 저장 / 실제 읽은 바이트 수 리턴
 *   - int read(byte[] buf, int start, int len) :
 *   		len의 크기만큼 읽어서 buf의 start 인덱스부터 buf에 저장 / 실제 읽은 바이트 수 리턴
 */
public class FileInputStreamEx1 {

	public static void main(String[] args) throws IOException {
		@SuppressWarnings("resource") //
		FileInputStream fis = new FileInputStream("src/chap14/InputStreamEx1.java");
		int data = 0;
		System.out.println("====== read() 메서드를 이용하여 읽기");
		// -1 : 파일의 끝 / EOF (End Of File)
		while((data = fis.read()) != -1) {
			System.out.print((char)data);
		}
		System.out.println("====== int read(byte[] buf) 메서드를 이용하여 읽기");
		fis = new FileInputStream("src/chap14/InputStreamEx1.java");
		// fis.availabe() : 읽기 가능 바이트수 리턴
		byte[] buf = new byte[fis.available()];
		// data : 실제로 읽은 바이트 수
		while((data = fis.read(buf)) != -1) {
			// new String(buf,0,data) : buf의 0번인덱스부터 data 길이만큼 문자열 객체로 생성
			System.out.print(new String(buf,0,data));
		}
		System.out.println();
		System.out.println
		("====== int read(byte[] buf, int start, int len) 메서드를 이용하여 읽기");
		fis = new FileInputStream("src/chap14/InputStreamEx1.java");
		while((data = fis.read(buf,0,buf.length)) != -1) {
			System.out.print(new String(buf,0,data));
		}
	}

}


***************InputStreamEx1.java***************

package chap14;

import java.io.IOException;
import java.io.InputStream;

/*
 * 입출력 스트림 : 데이터의 이동통로 / 단방향 / 버퍼를 가진다
 *   입력스트림
 *      바이트 : 1byte 단위 읽기 / 동영상, 이미지 등의 데이터 처리         / InputStream
 *            하위클래스 : FileInputStream, ObjectInputStream...
 *      문자 : 2byte 단위 읽기 / 텍스트 데이터 처리                    / Reader
 *      	  하위클래스 : FileReader, StringReader...
 *   출력스트림
 *      바이트 : 1byte 단위 읽기 / 동영상, 이미지 등의 데이터 처리         / OuputStream
 *      	  하위클래스 : FileOutputStream, PrintStream...
 *      문자 : 2byte 단위 읽기 / 텍스트 데이터 처리                    / Writer
 *      	  하위클래스 : FileWriter, PrintWriter...
 *      
 * InputStreamReader : 문자형입력스트림 <- 바이트형입력스트림
 * OutputStreamWriter : 문자형출력스트림 <- 바이트형출력스트림
 * 
 * 자바에서 제공하는 표준 입출력스트림 객체
 *   표준입력객체 : InputStream System.in : 키보드 입력
 *   표준출력객체 : PrintStream System.out : 콘솔 출력
 *   표준오류객체 : PrintStream System.err : 콘솔 출력  
 */
public class InputStreamEx1 {

	public static void main(String[] args) throws IOException {
		// InputStream : 바이트 입력스트림 -> 1바이트 기준으로 데이터 처리
		// read() : 1바이트 단위 읽기 -> 한글부분이 깨짐
		InputStream in = System.in;
		int data = 0;
		while((data = in.read()) != -1) { // ctrl+z
			System.out.print((char)data);
		}
	}

}


***************ObjectInputStreamEx1.java***************

package chap14;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;

/*
 * ObjectOutputStream을 이용하여 객체를 저장한 object.ser 파일을 읽어 객체 복원하기
 */
public class ObjectInputStreamEx1 {

	public static void main(String[] args) throws IOException, ClassNotFoundException {
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream("object.ser"));
		Customer c1 = (Customer)ois.readObject(); // 객체를 파일에서 읽기
		Customer c2 = (Customer)ois.readObject();
		System.out.println(c1+","+c2);
		ois.close();
	}

}
